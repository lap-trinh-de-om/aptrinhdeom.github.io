<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Lập Trình Dễ Òm.xyz</title>
    <link>https://www.laptrinhdeom.xyz/categories/javascript/</link>
    <description>Recent content in Javascript on Lập Trình Dễ Òm.xyz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Aug 2021 09:05:42 +0000</lastBuildDate><atom:link href="https://www.laptrinhdeom.xyz/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>&#39;this&#39; keyword trong Javascript</title>
      <link>https://www.laptrinhdeom.xyz/bai-viet/this-keyword-trong-javascript/</link>
      <pubDate>Sun, 22 Aug 2021 09:05:42 +0000</pubDate>
      
      <guid>https://www.laptrinhdeom.xyz/bai-viet/this-keyword-trong-javascript/</guid>
      <description>&amp;lsquo;this&amp;rsquo; keyword trong Javascript this trong Javascript liên quan đến đối tượng mà nó thuộc về.
Hơi trừu tượng phải không, đừng lo, mình sẽ giải thích rõ hơn ở bên dưới nha.
Tóm lượt về this this có giá trị khác nhau khi nó được sử dụng ở các ngữ cảnh khác nhau.
 Khi ở global scope, this sẽ có giá trị là global object, trong trình duyệt global object chính là window.</description>
    </item>
    
    <item>
      <title>use strict hay strict mode trong Javascript là gì?</title>
      <link>https://www.laptrinhdeom.xyz/bai-viet/use-strict-hay-strict-mode-trong-javascript-la-gi/</link>
      <pubDate>Sun, 15 Aug 2021 09:05:42 +0000</pubDate>
      
      <guid>https://www.laptrinhdeom.xyz/bai-viet/use-strict-hay-strict-mode-trong-javascript-la-gi/</guid>
      <description>Use strict là gì? Nó dùng để làm gì?   Use strict là khái niệm mới từ khi ES5 được phát hành, nó là 1 chuỗi bình thường, và được trình duyệt có version Javascript ES5 trở lên hiểu được, còn trình duyệt hỗ trợ Javascript version thấp hơn sẽ có vấn đề gì cả.
  Bởi vì Javascript là ngôn ngữ lập trình khá dễ dãi, khai báo và dùng biến kiểu gì cũng được, hay nói 1 cách khác là vô tội vạ, khiến cho nhiều bugs phát sinh và khó kiểm soát việc khai báo và sử dụng biến.</description>
    </item>
    
    <item>
      <title>Scope của biến trong javascript</title>
      <link>https://www.laptrinhdeom.xyz/bai-viet/javascript/scope-cua-bien-trong-javascript/</link>
      <pubDate>Wed, 11 Aug 2021 09:05:42 +0000</pubDate>
      
      <guid>https://www.laptrinhdeom.xyz/bai-viet/javascript/scope-cua-bien-trong-javascript/</guid>
      <description>Xem thêm:
 Var, let và const trong Javascript Hoisting trong Javascript   Scope (phạm vi) của biến trong Javascript như thế nào? Biến trong javascript luôn có phạm vi của nó, trong bài này mình sẽ giúp các bạn hiểu rõ về phạm vi (scope) của biến nhé.
Về cơ bản, Javascript có 3 loại scope như sau:
 Block scope Function scope Global scope  Chúng ta sẽ đi chi tiết về từng loại scope trên.</description>
    </item>
    
    <item>
      <title>Hoisting trong Javascript là gì?</title>
      <link>https://www.laptrinhdeom.xyz/bai-viet/javascript/hoisting-trong-javascript-la-gi/</link>
      <pubDate>Tue, 10 Aug 2021 10:55:03 +0000</pubDate>
      
      <guid>https://www.laptrinhdeom.xyz/bai-viet/javascript/hoisting-trong-javascript-la-gi/</guid>
      <description>Xem thêm:
 Var, let và const trong Javascript Scope trong Javascript   Hoisting trong Javascript là gì? Từ xưa giờ khi làm việc với javascript, thì chắc hẳn các bạn cũng nghe tới thuật ngữ Hoisting rồi đúng không.
Vậy Hoisting là cái quái gì vậy? nó có ăn được không? nó giúp ích gì cho chúng ta?
Mình sẽ giúp các bạn hiểu rõ về nó để chúng ta có đủ kiến thức và sự tự tin khi làm việc với javascript hơn nhé :)</description>
    </item>
    
    <item>
      <title>Sự khác nhau giữa Var, Let và Const trong Javascript</title>
      <link>https://www.laptrinhdeom.xyz/bai-viet/javascript/su-khac-nhau-giua-var-let-va-const-trong-javascript/</link>
      <pubDate>Mon, 09 Aug 2021 09:05:42 +0000</pubDate>
      
      <guid>https://www.laptrinhdeom.xyz/bai-viet/javascript/su-khac-nhau-giua-var-let-va-const-trong-javascript/</guid>
      <description>Xem thêm:
 Scope của biến trong Javascript Hoisting trong Javascript   var, let và const trong Javascript Cách khai báo, khởi tạo biến trong Javascript Khi lập trình chúng ta thường phải sử dụng các biến để lưu trữ giá trị, dữ liệu&amp;hellip;
Trong Javascript thì để khởi tạo, khai báo biến, chúng ta sẽ dùng var hoặc let hoặc const.
Ví dụ:
var hello = &amp;#34;Xin chào&amp;#34;; let name = &amp;#34;Lập trình Dễ òm&amp;#34;; const helloMessage = hello + &amp;#34; &amp;#34; + name; // Kết quả: &amp;#39;Xin chào Lập trình Dễ òm&amp;#39; Khá dễ hiểu phải không, vậy sự khác nhau giữa chúng là gì và khi nào nên dùng var, let và const?</description>
    </item>
    
  </channel>
</rss>
